CREATE TABLE  "CALCULATION" 
   (	"ID" NUMBER NOT NULL ENABLE, 
	"CALCULATION" VARCHAR2(50) COLLATE "USING_NLS_COMP", 
	 CONSTRAINT "CALCULATION_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   )  DEFAULT COLLATION "USING_NLS_COMP"
/
CREATE TABLE  "EXPENSE_TYPE" 
   (	"ID" NUMBER NOT NULL ENABLE, 
	"EXPENSE" VARCHAR2(45) COLLATE "USING_NLS_COMP" DEFAULT NULL, 
	"CALCULATION" NUMBER, 
	 PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   )  DEFAULT COLLATION "USING_NLS_COMP"
/
CREATE TABLE  "SUPPLIER" 
   (	"ID_SUPPLIER" NUMBER NOT NULL ENABLE, 
	"SUPPLIER" VARCHAR2(255) COLLATE "USING_NLS_COMP", 
	 CONSTRAINT "SUPPLIER_PK" PRIMARY KEY ("ID_SUPPLIER")
  USING INDEX  ENABLE
   )  DEFAULT COLLATION "USING_NLS_COMP"
/
CREATE TABLE  "ENTRANCE" 
   (	"ID" NUMBER NOT NULL ENABLE, 
	"ENTRANCE_NAME" VARCHAR2(45) COLLATE "USING_NLS_COMP" DEFAULT NULL, 
	 PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   )  DEFAULT COLLATION "USING_NLS_COMP"
/
CREATE TABLE  "EXPENSES_LOG" 
   (	"ID" NUMBER, 
	"YEAR_EXP" NUMBER, 
	"MONTH_EXP" NUMBER, 
	"DATE_EXP" DATE, 
	"SUPPLIER" NUMBER, 
	"AMOUNT" NUMBER, 
	"ENTRANCE" NUMBER, 
	"TYPE" NUMBER, 
	 CONSTRAINT "EXPENSES_LOG_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   )  DEFAULT COLLATION "USING_NLS_COMP"
/
CREATE TABLE  "BUILDING" 
   (	"ID" NUMBER(*,0) NOT NULL ENABLE, 
	"NAME" VARCHAR2(50) COLLATE "USING_NLS_COMP", 
	"ENTRANCE" NUMBER(*,0), 
	"POST_CODE" NUMBER(*,0), 
	"CADASTRE" VARCHAR2(50) COLLATE "USING_NLS_COMP", 
	 CONSTRAINT "BUILDING_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   )  DEFAULT COLLATION "USING_NLS_COMP"
/
CREATE TABLE  "APARTMENTS" 
   (	"ID" NUMBER NOT NULL ENABLE, 
	"AP_NUMBER" NUMBER, 
	"FLOOR" NUMBER(*,0), 
	"UNDIVIDED_SHARE" NUMBER, 
	"ENTRANCE" NUMBER, 
	"HABITANTS" NUMBER, 
	"HOUSEHOLD" VARCHAR2(50) COLLATE "USING_NLS_COMP", 
	 CONSTRAINT "APARTMENTS_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   )  DEFAULT COLLATION "USING_NLS_COMP"
/
CREATE TABLE  "INCOME_TYPE" 
   (	"ID" NUMBER NOT NULL ENABLE, 
	"TYPE" VARCHAR2(50) COLLATE "USING_NLS_COMP", 
	 CONSTRAINT "INCOME_TYPE_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   )  DEFAULT COLLATION "USING_NLS_COMP"
/
CREATE TABLE  "INCOME_LOG" 
   (	"ID" NUMBER, 
	"YEAR_INC" NUMBER, 
	"MONTH_INC" NUMBER, 
	"FLOOR_INC" NUMBER, 
	"AP_ID" NUMBER, 
	"AMOUNT" NUMBER, 
	"RIO" NUMBER, 
	"HAB_NUMBER" NUMBER, 
	"ART_51" NUMBER, 
	"MANAGEMENT_COST" NUMBER, 
	"ELECTR_ELEVATOR_AP" NUMBER, 
	"ELECTR_STAIRCASE_AP" NUMBER, 
	"TAX_ELEVATOR_AP" NUMBER, 
	"CLEANER_AP" NUMBER, 
	"RUN_COST_AP" NUMBER, 
	"BALANCE" NUMBER, 
	"ELECTR_ELEVATOR" NUMBER, 
	"ELECTR_STAIRCASE" NUMBER, 
	"TAX_ELEVATOR" NUMBER, 
	"CLEANER" NUMBER, 
	"RUN_COST" NUMBER, 
	"EXPENSE" NUMBER, 
	"TYPE" NUMBER, 
	"ENTRANCE" NUMBER, 
	 CONSTRAINT "INCOME_LOG_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   )  DEFAULT COLLATION "USING_NLS_COMP"
/
CREATE TABLE  "NMW" 
   (	"ID" NUMBER, 
	"VALIDFROM" DATE, 
	"VALIDTILL" DATE, 
	"MONTHLY" NUMBER, 
	"HOURLY" NUMBER, 
	"ACT" VARCHAR2(30) COLLATE "USING_NLS_COMP", 
	 CONSTRAINT "NMW_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   )  DEFAULT COLLATION "USING_NLS_COMP"
/
ALTER TABLE  "BUILDING" ADD CONSTRAINT "BUILDING_ENTRANCE_FK" FOREIGN KEY ("ENTRANCE")
	  REFERENCES  "ENTRANCE" ("ID") ENABLE
/
ALTER TABLE  "APARTMENTS" ADD CONSTRAINT "APARTMENTS_CON" FOREIGN KEY ("ENTRANCE")
	  REFERENCES  "ENTRANCE" ("ID") ON DELETE CASCADE ENABLE
/
ALTER TABLE  "EXPENSE_TYPE" ADD CONSTRAINT "FK_CALCULATION_EXPENSE_TYPE" FOREIGN KEY ("CALCULATION")
	  REFERENCES  "CALCULATION" ("ID") ON DELETE CASCADE ENABLE
/
ALTER TABLE  "EXPENSES_LOG" ADD CONSTRAINT "FK_EXPENSES_ENTRANCE" FOREIGN KEY ("ENTRANCE")
	  REFERENCES  "ENTRANCE" ("ID") ON DELETE CASCADE ENABLE
/
ALTER TABLE  "EXPENSES_LOG" ADD CONSTRAINT "FK_EXPENSES_LOG_SUPPLIER" FOREIGN KEY ("SUPPLIER")
	  REFERENCES  "SUPPLIER" ("ID_SUPPLIER") ON DELETE CASCADE ENABLE
/
ALTER TABLE  "EXPENSES_LOG" ADD CONSTRAINT "FK_EXPENSES_LOG_TYPE" FOREIGN KEY ("TYPE")
	  REFERENCES  "EXPENSE_TYPE" ("ID") ENABLE
/
ALTER TABLE  "INCOME_LOG" ADD CONSTRAINT "INCOME_LOG_APARTMENTS_FK" FOREIGN KEY ("AP_ID")
	  REFERENCES  "APARTMENTS" ("ID") ENABLE
/
ALTER TABLE  "INCOME_LOG" ADD CONSTRAINT "INCOME_LOG_CON" FOREIGN KEY ("TYPE")
	  REFERENCES  "INCOME_TYPE" ("ID") ON DELETE CASCADE ENABLE
/
CREATE UNIQUE INDEX  "SYS_C0012182" ON  "ENTRANCE" ("ID")
/
CREATE UNIQUE INDEX  "BUILDING_PK" ON  "BUILDING" ("ID")
/
CREATE UNIQUE INDEX  "APARTMENTS_PK" ON  "APARTMENTS" ("ID")
/
CREATE UNIQUE INDEX  "SYS_C0012196" ON  "EXPENSE_TYPE" ("ID")
/
CREATE UNIQUE INDEX  "SUPPLIER_PK" ON  "SUPPLIER" ("ID_SUPPLIER")
/
CREATE UNIQUE INDEX  "EXPENSES_LOG_PK" ON  "EXPENSES_LOG" ("ID")
/
CREATE UNIQUE INDEX  "INCOME_LOG_PK" ON  "INCOME_LOG" ("ID")
/
CREATE UNIQUE INDEX  "NMW_PK" ON  "NMW" ("ID")
/
CREATE UNIQUE INDEX  "CALCULATION_PK" ON  "CALCULATION" ("ID")
/
CREATE UNIQUE INDEX  "INCOME_TYPE_PK" ON  "INCOME_TYPE" ("ID")
/
CREATE OR REPLACE EDITIONABLE PROCEDURE  "UPDATE_MRZ" is 
begin 
UPDATE ART50 t1 
   SET t1.VALID_TILL = 
       (WITH ART50_lead AS ( 
       						SELECT  
       							ID, 
       							tt.VALID_FROM AS vf, 
								LEAD(VALID_FROM,1) OVER (ORDER BY VALID_FROM)-1 AS vt 
                            FROM ART50 tt)        
           SELECT t2.vt 
           FROM ART50_lead t2 
           WHERE t1.VALID_FROM = t2.vf  
          	AND t1.ID = t2.ID); 
end; 
/

 CREATE SEQUENCE   "NMW_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 181 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "INCOME_LOG_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 13532 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "INCOME_LOG_PRE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1323 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "HOUSEHOLDS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "DEMO_USERS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "EC_TYPE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "CALCULATION_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "INCOME_TYPE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "bi_NMW" 
  before insert on "NMW"               
  for each row  
begin   
  if :new."ID" is null then 
    select "NMW_SEQ".nextval into :new."ID" from sys.dual; 
  end if; 
end; 
 

/
ALTER TRIGGER  "bi_NMW" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "INCOME_BIR" 
BEFORE INSERT ON INCOME_LOG  
FOR EACH ROW 
 
BEGIN 
  SELECT income_log_seq.NEXTVAL 
  INTO   :new.id 
  FROM   dual; 
END; 
 

/
ALTER TRIGGER  "INCOME_BIR" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "EXPENSES_LOG_T1" 
BEFORE 
insert or update or delete on "EXPENSES_LOG" 
for each row 
begin 
begin   
  if :new."ID" is null then 
    select "EXPENSES_PRE_SEQ".nextval into :new."ID" from dual; 
  end if; 
end; 
end; 
 

/
ALTER TRIGGER  "EXPENSES_LOG_T1" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "BI_CALCULATION" 
  before insert on "CALCULATION"               
  for each row  
begin   
  if :NEW."ID" is null then 
    select "CALCULATION_SEQ".nextval into :NEW."ID" from sys.dual; 
  end if; 
end; 

/
ALTER TRIGGER  "BI_CALCULATION" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "BI_INCOME_TYPE" 
  before insert on "INCOME_TYPE"               
  for each row  
begin   
  if :NEW."ID" is null then 
    select "INCOME_TYPE_SEQ".nextval into :NEW."ID" from sys.dual; 
  end if; 
end; 

/
ALTER TRIGGER  "BI_INCOME_TYPE" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "BI_EXPENSE_TYPE" 
BEFORE
insert or update or delete on "EXPENSE_TYPE"
for each row
begin
begin   
  if :new."ID" is null then 
    select "EC_TYPE_SEQ".nextval into :new."ID" from dual; 
  end if; 
end; 

end;

/
ALTER TRIGGER  "BI_EXPENSE_TYPE" ENABLE
/
CREATE OR REPLACE FORCE EDITIONABLE VIEW  "DUPLICATES" ("ID_COMPLEX", "COUNT") DEFAULT COLLATION "USING_NLS_COMP"  AS 
  select  
        ID_COMPLEX,  
        count(ID_COMPLEX) AS "COUNT" 
    from INCOME_LOG 
    group by ID_COMPLEX 
    having count (ID_COMPLEX) > 1 
    ORDER BY ID_COMPLEX DESC
/
CREATE OR REPLACE FORCE EDITIONABLE VIEW  "EC_EXPENSES_SORTED" ("ID", "YEAR_EXP", "MONTH_EXP", "DATE_EXP", "REFERENCE", "ID_SUPPLIER", "TOTAL", "METHOD_ID", "HABITANTS_NUMBER", "HABITANTS", "BUILDING_ID") DEFAULT COLLATION "USING_NLS_COMP"  AS 
  SELECT  
    "ID","YEAR_EXP","MONTH_EXP","DATE_EXP","REFERENCE","ID_SUPPLIER","TOTAL","METHOD_ID","HABITANTS_NUMBER","HABITANTS","BUILDING_ID" 
FROM 
    EXPENSES_LOG 
ORDER BY DATE_EXP DESC
/
CREATE OR REPLACE FORCE EDITIONABLE VIEW  "EC_INCOME_SORTED" ("ID", "Година", "Месец", "Етаж", "ап.", "ЕС", "Фамилия", "Общо", "РИО", "бр. жив", "чл. 51", "доп.", "ток ас. ап.", "ток ст. ап.", "такса ас. ап.", "почистване ап.", "тек. разходи ап.", "баланс", "ток ас.", "ток ст.", "такса ас.", "почистване", "тек. разходи", "ID_COMPLEX") DEFAULT COLLATION "USING_NLS_COMP"  AS 
  SELECT  
        ID AS "ID", 
        YEAR_INC AS "Година", 
        MONTH_INC AS "Месец", 
        FLOOR_INC AS "Етаж", 
        INCOME_LOG.AP_ID AS "ап.", 
        INCOME_LOG.BUILDING_ID AS "ЕС", 
        HOUSEHOLDS.HOUSEHOLD AS "Фамилия", 
        AMOUNT AS "Общо", 
        RIO AS "РИО", 
        HAB_NUMBER AS "бр. жив", 
        ART_51 AS "чл. 51", 
        MANAGEMENT_COST AS "доп.", 
        ELECTR_ELEVATOR_AP AS "ток ас. ап.", 
        ELECTR_STAIRCASE_AP AS "ток ст. ап.", 
        TAX_ELEVATOR_AP AS "такса ас. ап.", 
        CLEANER_AP AS "почистване ап.", 
        RUN_COST_AP AS "тек. разходи ап.", 
        BALANCE AS "баланс", 
        ELECTR_ELEVATOR  AS "ток ас.", 
        ELECTR_STAIRCASE AS "ток ст.", 
        TAX_ELEVATOR AS "такса ас.", 
        CLEANER AS "почистване", 
        RUN_COST AS "тек. разходи", 
        ID_COMPLEX 
    FROM INCOME_LOG 
    JOIN HOUSEHOLDS ON INCOME_LOG.ID_HOUSEHOLD = HOUSEHOLDS."id_household" 
    ORDER BY YEAR_INC DESC, MONTH_INC DESC, FLOOR_INC
/
CREATE OR REPLACE FORCE EDITIONABLE VIEW  "EC_REPORT" ("Година", "Месец", "Общо", "Ток стълби", "Ток асансьор", "Такса асансьор", "Почистване", "Текущи разходи") DEFAULT COLLATION "USING_NLS_COMP"  AS 
  SELECT 
        YEAR_INC AS "Година", 
        MONTH_INC AS "Месец", 
        ROUND(SUM(AMOUNT),2) AS "Общо", 
        ROUND(SUM(ELECTR_STAIRCASE_AP),2) AS "Ток стълби", 
        ROUND(SUM(ELECTR_ELEVATOR_AP),2) AS "Ток асансьор", 
        ROUND(SUM(TAX_ELEVATOR_AP),2) AS "Такса асансьор", 
        ROUND(SUM(CLEANER_AP),2) AS "Почистване", 
        ROUND(SUM(RUN_COST_AP),2) AS "Текущи разходи" 
        FROM INCOME_LOG 
        GROUP BY YEAR_INC , MONTH_INC 
        ORDER BY YEAR_INC DESC, MONTH_INC
/
